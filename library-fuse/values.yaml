# Default values for library-fuse.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
name: demo-app

deploymentConfig:
  configmap: ""
  ports:
    http: 8080
    health: 8082
    monitoring: 9779
    jolokia: 8778
  resources:
    limits:
      cpu: '1'
      memory: 1Gi
    requests:
      cpu: 300m
      memory: 100Mi 
  replicas: 1

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

javaoptions: -javaagent:agent/jmx_prometheus_javaagent-0.12.0.jar=9779:agent/config.yaml

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
 
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  http: 
    port: 8080
    protocol: TCP
    targetPort: 8080
    name: http
  health:
    port: 8082
    protocol: TCP
    targetPort: 8082
    name: health
  monitoring:
    port: 9779
    protocol: TCP
    targetPort: 9779
    name: monitoring
  jolokia:
    port: 8778
    protocol: TCP
    targetPort: 8778
    name: jolokia
  sessionAffinity: None

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
  failureThreshold: 3
  initialDelaySeconds: 90
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 30
readinessProbe:
  httpGet:
    path: /
    port: http
  failureThreshold: 3
  initialDelaySeconds: 90
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 30           

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
